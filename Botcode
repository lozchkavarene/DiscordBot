import discord
from discord.ext import commands
from discord.utils import get
import datetime

bot = commands.Bot(command_prefix="!", help_command=None)


@bot.event
async def on_ready():
    print("Bot was connected to the server")

    await bot.change_presence(status=discord.Status.online,
                              activity=discord.Game("help to you "))  # Изменяем статус боту

    """Статус
    Также можно установить не только Game, но и Watching или Streaming..
    """


@bot.event
async def on_message(message):
    await bot.process_commands(message)

    msg = message.content.lower()
    greeting_words = ["hello", "hi", "привет"]
    censored_words = ["дурак", "дура", "придурок"]

    if msg in greeting_words:
        await message.channel.send(f"{message.author.name}, приветствую тебя!")

    # Filter censored words
    for bad_content in msg.split(" "):
        if bad_content in censored_words:
            await message.channel.send(f"{message.author.mention}, ай-ай-ай... Плохо, плохо, так нельзя!")


@bot.event
async def on_member_join(member):
    channel = bot.get_channel(id)  # Передайте ID канала
    role = discord.utils.get(member.guild.roles, id=922959469086920735)  # Передайте ID роли

    await member.add_roles(role)
    await channel.send(embed=discord.Embed(description=f'Пользователь ``{member.name}`` теперь с нами!',
                                           color=0xfc2c))


@bot.event
async def on_command_error(ctx, error):
    """Работа с ошибками

    Работать с ошибками можно с двумя способами, как в видео (11 серия "Работа с ошибками")
    или же в данной функции. Легче всего использовать второй вариант..
    """

    print(error)

    if isinstance(error, commands.MissingPermissions):
        await ctx.send(f"{ctx.author}, у вас недостаточно прав для выполнения данной команды!")
    elif isinstance(error, commands.UserInputError):
        await ctx.send(embed=discord.Embed(
            description=f"Правильное использование команды: `{ctx.prefix}{ctx.command.name}` ({ctx.command.brief})\nExample: {ctx.prefix}{ctx.command.usage}"
        ))


@bot.command()
async def clean(ctx, amount: int):
    await ctx.channel.purge(limit=int(amount))


@bot.command
async def send_a(ctx):
    await ctx.author.send('Welcome to our server!')


@bot.command
async def send_m(ctx, member: discord.Member):
    await member.send('Welcome to our server!')


@bot.command(name="kick", brief="Выгнать пользователя с сервера", usage="kick <@user> <reason=None>")
@commands.has_permissions(kick_members=True)
async def kick(ctx, member: discord.Member, *, reason=None):
    await ctx.message.delete(delay=1)  # Если желаете удалять сообщение после отправки с задержкой

    await member.send(f"You was kicked from server")  # Отправить личное сообщение пользователю
    await ctx.send(f"Member {member.mention} was kicked from this server!")
    await member.kick(reason=reason)


@bot.command(name="ban", brief="Забанить пользователя на сервере", usage="ban <@user> <reason=None>")
@commands.has_permissions(ban_members=True)
async def ban(ctx, member: discord.Member, *, reason=None):
    emb = discord.Embed(title='Ban', colour=discord.Color.red())
    await member.send(f"You was banned on server")  # Отправить личное сообщение пользователю
    emb.set_author(name=member.name, icon_url=member.avatar_url)
    emb.add_field(name='Ban', value='Baned user:{}'.format(member.mention))
    emb.set_footer(text='Banned from {}'.format(ctx.author.name), icon_url=ctx.author.avatar_url)
    await ctx.send(f"Member {member.mention} was banned on this server")
    await member.ban(reason=reason)


@bot.command(name="unban", brief="Разбанить пользователя на сервере", usage="unban <user_id>")
@commands.has_permissions(ban_members=True)
async def unban(ctx, user_id: int):
    user = await bot.fetch_user(user_id)
    await ctx.guild.unban(user)


@bot.command()
async def help(ctx):
    """Команда help
    Чтобы не писать тысячу строк одинакового кода, лучше занесем название и описание команд в списки,
    и переберм в цикле.
    """

    embed = discord.Embed(
        title="Help menu",
        description="Here you can find the necessary command"
    )
    commands_list = ["clean", "kick", "ban", "unban"]
    descriptions_for_commands = ["Clean chat", "Kick user", "Ban user", "Unban user"]

    for command_name, description_command in zip(commands_list, descriptions_for_commands):
        embed.add_field(
            name=command_name,
            value=description_command,
            inline=False  # Будет выводиться в столбик, если True - в строчку
        )

    await ctx.send(embed=embed)


@bot.command()
async def time(ctx):
    emb = discord.Embed(title='Your title', description='Узнать текущее время', colour=discord.Color.green(),
                        url='https://www.timeserver.ru/')
    emb.set_author(name=bot.user.name, icon_url=bot.user.avatar_url)
    emb.set_footer(text='Вы всегда во время!')
    emb.set_thumbnail(
        url='https://w7.pngwing.com/pngs/649/327/png-transparent-minecraft-clock-pixel-art-timer-item-minecraft-heart-rectangle-symmetry-bead.png')

    now_date = datetime.datetime.now()
    emb.add_field(name='Time in Moscow,Russia'.format(now_date), value='Time: {}'.format(now_date))

    await ctx.send(embed=emb)


@bot.command(name="mute", brief="Запретить пользователю писать (настройте роль и канал)", usage="mute <member>")
async def mute_user(ctx, member: discord.Member):
    mute_role = discord.utils.get(ctx.message.guild.roles, name="role name")

    await member.add_roles(mute_role)
    await ctx.send(f"{ctx.author} gave role mute to {member}")

    """Временный мут
     Если вы пишите: !mute @user 1h, и в переменной time_mute находит букву "h" значит asyncio.sleep(time_mute[:1] * 3600)
    """


@bot.command(name="join", brief="Подключение к голосовому каналу", usage="join")
async def join_to_channel(ctx):
    global voice
    channel = ctx.message.author.voice.channel
    voice = get(bot.voice_clients, guild=ctx.guild)

    if voice and voice.is_connected():
        await voice.move_to(channel)
    else:
        voice = await channel.connect()
        await ctx.send(f"Bot was connected to the voice channel")


@bot.command(name="leave", brief="Отключение от голосового канала", usage="leave")
async def leave_from_channel(ctx):
    global voice
    voice = get(bot.voice_clients, guild=ctx.guild)
    channel = ctx.message.author.voice.channel

    if voice and voice.is_connected():
        await voice.disconnect()
    else:
        voice = await channel.disconnect()
        await ctx.send(f"Bot was connected to the voice channel")


bot.run('token')
